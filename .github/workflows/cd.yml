name: 🚀 CD - Continuous Deployment

on:
  workflow_run:
    workflows: ["🔄 CI - Continuous Integration"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '20'
  
jobs:
  check-ci-status:
    name: 🔍 Check CI Status
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: ✅ CI Passed
      run: echo "CI workflow completed successfully, proceeding with deployment"
      
  deploy-staging:
    name: 🌱 Deploy to Staging
    runs-on: ubuntu-latest
    needs: check-ci-status
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    environment: staging
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build for staging
      run: npm run build:staging
      env:
        NODE_ENV: staging
        
    - name: 🚀 Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        # Add your staging deployment commands here
        # Example: aws s3 sync dist/ s3://staging-bucket/
        
    - name: 🔗 Post deployment URL
      run: |
        echo "🎉 Staging deployment completed!"
        echo "📍 URL: https://staging.xcloud-bot.example.com"
        
  deploy-production:
    name: 🏭 Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build for production
      run: npm run build:production
      env:
        NODE_ENV: production
        
    - name: 🚀 Deploy to production
      run: |
        echo "Deploying to production environment..."
        # Add your production deployment commands here
        # Example: aws s3 sync dist/ s3://production-bucket/
        
    - name: 🔗 Post deployment URL
      run: |
        echo "🎉 Production deployment completed!"
        echo "📍 URL: https://xcloud-bot.example.com"
        
  notify:
    name: 📢 Notify
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-production]
    if: always()
    
    steps:
    - name: 📧 Send notification
      run: |
        if [ "${{ needs.deploy-staging.result }}" == "success" ] || [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "✅ Deployment completed successfully"
        else
          echo "❌ Deployment failed"
        fi