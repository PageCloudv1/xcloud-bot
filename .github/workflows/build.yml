name: 🏗️ Build - Construção de Artefatos

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - '.github/workflows/build.yml'
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
      build-command:
        description: 'Build command to execute'
        required: false
        type: string
        default: 'npm run build'
    outputs:
      build-status:
        description: 'Status of the build'
        value: ${{ jobs.build.outputs.status }}
      artifact-size:
        description: 'Size of the build artifacts'
        value: ${{ jobs.build.outputs.artifact-size }}
      build-version:
        description: 'Version of the build'
        value: ${{ jobs.build.outputs.version }}

env:
  NODE_VERSION: ${{ inputs.node-version || '20' }}

jobs:
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.build-status.outputs.status }}
      artifact-size: ${{ steps.artifact-info.outputs.size }}
      version: ${{ steps.version-info.outputs.version }}
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🏷️ Generate version info
        id: version-info
        run: |
          VERSION="${GITHUB_SHA:0:7}-$(date +%Y%m%d-%H%M%S)"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"
      
      - name: 🏗️ Build project
        run: ${{ inputs.build-command || 'npm run build' }}
      
      - name: 🔍 Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "❌ Build directory 'dist' not found"
            exit 1
          fi
          echo "✅ Build output verified"
      
      - name: 📊 Artifact size analysis
        id: artifact-info
        run: |
          SIZE=$(du -sh dist/ | cut -f1)
          echo "size=$SIZE" >> $GITHUB_OUTPUT
          echo "Artifact size: $SIZE"
      
      - name: 🗜️ Optimize artifacts (placeholder)
        run: |
          echo "🗜️ Optimizing artifacts..."
          echo "Compression and optimization would happen here"
      
      - name: 📚 Generate documentation (if configured)
        run: |
          if [ -f "package.json" ] && grep -q '"docs:build"' package.json; then
            echo "📚 Generating documentation..."
            npm run docs:build || echo "⚠️ Documentation generation skipped"
          else
            echo "ℹ️ No documentation build script found"
          fi
      
      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            package.json
            package-lock.json
          retention-days: 7
          compression-level: 9
      
      - name: 📋 Build summary
        id: build-status
        run: |
          echo "status=success" >> $GITHUB_OUTPUT
          echo "### 🏗️ Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 Version: ${{ steps.version-info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Artifact size: ${{ steps.artifact-info.outputs.size }}" >> $GITHUB_STEP_SUMMARY

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: 📦 Install dependencies
        run: npm ci
      
      - name: 🔍 Run npm audit
        run: |
          echo "🔍 Running security audit..."
          npm audit --audit-level=moderate || echo "⚠️ Security issues found"

  quality-validation:
    name: ✅ Quality Validation
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./artifacts
      
      - name: ✅ Validate build artifacts
        run: |
          echo "✅ Validating build artifacts..."
          if [ -d "artifacts/dist" ]; then
            echo "✅ Build artifacts are valid"
          else
            echo "❌ Build artifacts validation failed"
            exit 1
          fi
      
      - name: 📊 Performance benchmarks (placeholder)
        run: |
          echo "📊 Running performance benchmarks..."
          echo "Performance tests would run here"
